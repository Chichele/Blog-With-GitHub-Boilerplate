{"posts": [{"title": "opus\u97f3\u9891\u538b\u7f29\u7684Python\u5b9e\u73b0", "date": "2020-08-30T21:14:00-00.00", "path": "/archives/opus\u97f3\u9891\u538b\u7f29\u7684Python\u5b9e\u73b0/", "text": "\u6700\u8fd1\u6211\u5728\u5f00\u53d1\u8bed\u97f3\u8bc6\u522b\u5e94\u7528\u7684\u65f6\u5019\uff0c\u63a5\u89e6\u5230opus\u8fd9\u79cd\u6709\u635f\u97f3\u9891\u538b\u7f29\u683c\u5f0f\uff0c\u5927\u6982\u80fd\u538b\u7f29\u5230\u539f\u97f3\u9891\u7684\u5341\u5206\u4e4b\u4e00\u5927\u5c0f\uff0c\u76f8\u5f53\u4f18\u79c0\uff0c\u636e\u8bf4\u5df2\u5b9e\u9645\u53d6\u4ee3\u4e86speex\u7684\u5730\u4f4d\u3002opus\u7684\u4f7f\u7528\u4e0a\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u4f46\u7f51\u4e0a\u7684\u8d44\u6599\u4e0d\u591a\uff0c\u4e5f\u82b1\u4e86\u6211\u4e00\u4e9b\u65f6\u95f4\u53bb\u7406\u89e3\u6d88\u5316\uff0c\u7279\u6b64\u8bb0\u5f55\u5e76\u5206\u4eab\u4e00\u4e0b\u3002\n\n\u4f9d\u8d56\u5b89\u88c5\n\nLinux\u4e0b\u6267\u884cpip3 install opuslib\nWindows\u4e0b\u6267\u884c\u5b89\u88c5pip3 install opuslib\u540e\uff0c\u8fd0\u884c\u65f6\u4ecd\u4f1a\u62a5\u7f3a\u5c11opus\u73af\u5883\uff0c\u6682\u672a\u89e3\u51b3\u3002\n\n\u6837\u4f8b\u4ee3\u7801\n\n# \u4ee5\u4e0b\u4ee3\u7801\u5305\u542b\u97f3\u9891\u538b\u7f29\u4e0e\u89e3\u538b\nimport opuslib\nOPUS_FRAME_SIZE = 640 # \u5355\u6b21\u538b\u7f29\u7684\u7247\u6bb5\u5b57\u8282\u5927\u5c0f\uff0c\u53ef\u6839\u636e\u5177\u4f53\u4e1a\u52a1\u8bbe\u7f6e\nencoder = opuslib.Encoder(voice_record.RATE, voice_record.CHANNELS, \"voip\") # opus\u538b\u7f29\u67093\u79cd\u6a21\u5f0f'voip','audio','restricted_lowdelay'\ndecoder = opuslib.Decoder(voice_record.RATE, voice_record.CHANNELS)\n\nencoder.reset_state() # \u91cd\u7f6e\u72b6\u6001\ndecoder.reset_state()\n\n# voice_piece\u662f\u5f85\u538b\u7f29\u7684\u97f3\u9891\u7247\u6bb5\uff0c\u5927\u5c0f\u4e3aOPUS_FRAME_SIZE\u4e2a\u5b57\u8282\ntmp_enc_piece = encoder.encode(voice_piece, int(OPUS_FRAME_SIZE/2)) # \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fframe_size\uff0c\u6bcf\u4e00frame\u5b9e\u9645\u662f2\u5b57\u8282\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u9664\u4ee52\ntmp_dec_piece = decoder.decode(tmp_enc_piece, int(OPUS_FRAME_SIZE/2), False)\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "\u97f3\u9891\u5904\u7406", "slug": "\u97f3\u9891\u5904\u7406", "permalink": "/tag/\u97f3\u9891\u5904\u7406/"}]}, {"title": "\u81ea\u52a8\u4fdd\u5b58\u6587\u4ef6\u4e3aUTF-8\u7f16\u7801\u683c\u5f0f", "date": "2020-02-23T00:36:12-00.00", "path": "/archives/\u81ea\u52a8\u4fdd\u5b58\u6587\u4ef6\u4e3aUTF-8\u7f16\u7801\u683c\u5f0f/", "text": "\u5199\u5728\u524d\u9762\n\u6700\u8fd1\u5728\u7422\u78e8\u8de8\u5e73\u53f0\u5f00\u53d1\uff0c\u9700\u8981\u628a\u4ee3\u7801\u6587\u4ef6\u90fd\u7edf\u4e00\u4fdd\u5b58\u4e3aUTF8 no bom\u7684\u683c\u5f0f\uff0c\u4f46\u627e\u4e86\u5f88\u4e45\u4e5f\u6ca1\u627e\u5230\u5c06\u6587\u4ef6\u7f16\u7801\u683c\u5f0f\u81ea\u52a8\u4fdd\u5b58\u4e3aUTF8 no bom\u7684\u65b9\u6cd5\u3002\u5c1d\u8bd5\u8fc7VS\u7684\u63d2\u4ef6Force UTF-8(No BOM)\uff0c\u4f46\u53ef\u80fd\u56e0\u4e3a\u7248\u672c\u95ee\u9898\uff0c\u5728\u6211\u7684VS2019\uff0816.3.7\uff09\u4e0a\u5e76\u672a\u751f\u6548\u3002\n\u7136\u540e\u5076\u7136\u53d1\u73b0\u4e86EditorConfig\u53ef\u4ee5\u641e\u5b9a\uff0cVS\u4ee5\u53ca\u5f88\u591a\u5176\u5b83\u7f16\u8f91\u5668\u90fd\u652f\u6301\u5b83\u3002\n\u89e3\u51b3\u529e\u6cd5\n\u5728\u9879\u76ee\u6839\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6.editorconfig\uff0c\u7136\u540e\u8f93\u5165\u5185\u5bb9\u5e76\u4fdd\u5b58\uff0c\u91cd\u542f\u7f16\u8f91\u5668/IDE\u540e\u751f\u6548\uff1a\n\n# EditorConfig is awesome: https://EditorConfig.org\n# top-most EditorConfig file\nroot = true\n# Unix-style newlines with a newline ending every file\n[*]\ncharset = utf-8\n# Matches multiple files with brace expansion notation\n# Set default charset\n[*.{js,py}]\ncharset = utf-8\n\u53ef\u4ee5\u4ece\u4e0a\u9762\u7684\u6ce8\u91ca\u5185\u5bb9\u770b\u51fa\uff0cEditorConfig \u652f\u6301\u9488\u5bf9\u4e0d\u540c\u6587\u4ef6\u540e\u7f00\u4f7f\u7528\u4e0d\u540c\u914d\u7f6e\u65b9\u6848\u3002\u9664\u4e86\u8bbe\u7f6e\u6587\u4ef6\u7f16\u7801\u5916\uff0cEditorConfig\u8fd8\u652f\u6301\u4ee3\u7801\u7f29\u8fdb\u7b49\u914d\u7f6e\uff0c\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u5230https://EditorConfig.org\u67e5\u770b\u3002\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/tag/\u778e\u6298\u817e/"}]}, {"title": "Tornado\u5f02\u6b65\u4e0e\u5ef6\u8fdf\u4efb\u52a1", "date": "2015-05-24T00:40:11-00.00", "path": "/archives/Tornado\u5f02\u6b65\u4e0e\u5ef6\u8fdf\u4efb\u52a1/", "text": "\u6700\u8fd1\u4e00\u76f4\u5728\u7814\u7a76Tornado\u5f02\u6b65\u64cd\u4f5c\uff0c\u7136\u800c\u4e00\u756a\u7814\u7a76\u540e\u53d1\u73b0\u8981\u4f7f\u4e00\u4e2a\u51fd\u6570\u5f02\u6b65\u5316\u7684\u6700\u597d\u65b9\u6cd5\u5c31\u662f\u91c7\u7528\u76f8\u5173\u5f02\u6b65\u5e93\uff0c\u4f46\u76ee\u524d\u5f88\u591a\u529f\u80fd\u5f3a\u5927\u7684\u5e93\u90fd\u4e0d\u5728\u6b64\u5217\u3002\u7ecf\u8fc7\u4e00\u756a\u67e5\u627e\u6587\u6863\u548c\u641c\u7d22\u793a\u8303\uff0c\u7ec8\u4e8e\u53d1\u73b0\u4e86ThreadPoolExecutor\u6a21\u5757\u548crun_on_executor\u88c5\u9970\u5668\u3002\u7528\u6cd5\u5c31\u662f\u5efa\u7acb\u7ebf\u7a0b\u6c60\uff0c\u7528run_on_executor\u88c5\u9970\u7684\u51fd\u6570\u5373\u8fd0\u884c\u5728\u5176\u4e2d\u7ebf\u7a0b\u4e2d\uff0c\u4ece\u800c\u4ece\u4e3b\u7ebf\u7a0b\u4e2d\u5206\u79bb\u51fa\u6765\uff0c\u8fbe\u5230\u5f02\u6b65\u7684\u76ee\u7684\u3002\n\u53e6\u5916\uff0cTornado\u7684IOLoop\u5b9e\u4f8b\u8fd8\u6709IOLoop.add_callback(callback, *args, **kwargs)\u65b9\u6cd5\uff0c\u6587\u6863\u4e2d\u7684\u63cf\u8ff0\u5982\u4e0b\uff1a\nCalls the given callback on the next I/O loop iteration.\nIt is safe to call this method from any thread at any time, except from a signal handler. Note that this is the\u00a0only\u00a0method in\u00a0IOLoop\u00a0that makes this thread-safety guarantee; all other interaction with the IOLoop\u00a0must be done from that\u00a0IOLoop\u2018s thread.\u00a0add_callback()\u00a0may be used to transfer control from other threads to the\u00a0IOLoop\u2018s thread.\n\n\u610f\u601d\u5c31\u662f\u5728\u6267\u884cadd_callback\u65b9\u6cd5\u540e\u9a6c\u4e0a\u5c31\u4f1a\u6267\u884c\u4e0b\u4e00\u884c\u4ee3\u7801\uff0c\u800ccallback\u51fd\u6570\u5c06\u5728\u4e0b\u4e00\u8f6e\u4e8b\u4ef6\u5faa\u73af\u4e2d\u624d\u8c03\u7528\uff0c\u4ece\u800c\u5c31\u80fd\u5b9e\u73b0\u5ef6\u8fdf\u4efb\u52a1\u3002\u5728Web APP\u4e2d\u5e94\u4ed8HTTP\u8bf7\u6c42\u65f6\uff0c\u5f53\u6709\u4e00\u4e9b\u8017\u65f6\u64cd\u4f5c\u5e76\u4e0d\u9700\u8981\u8fd4\u56de\u7ed9\u8bf7\u6c42\u65b9\u65f6\uff0c\u5c31\u53ef\u4ee5\u91c7\u7528\u5ef6\u8fdf\u4efb\u52a1\u7684\u5f62\u5f0f\uff0c\u6bd4\u5982\u53d1\u9001\u63d0\u9192\u90ae\u4ef6\u3002\n\u793a\u8303\u4ee3\u7801\u5982\u4e0b\uff1a\n#!/bin/env python\nimport tornado.httpserver\nimport tornado.ioloop\nimport tornado.options\nimport tornado.web\nimport tornado.httpclient\nimport tornado.gen\nfrom tornado.concurrent import run_on_executor\n# \u8fd9\u4e2a\u5e76\u53d1\u5e93\u5728python3\u81ea\u5e26;\u5728python2\u9700\u8981\u5b89\u88c5sudo pip install futures\nfrom concurrent.futures import ThreadPoolExecutor\nimport time\nfrom tornado.options import define, options\ndefine(&quot;port&quot;, default=8002, help=&quot;run on the given port&quot;, type=int)\n\nclass SleepHandler(tornado.web.RequestHandler):\n    executor = ThreadPoolExecutor(2)\n\n    def get(self):\n        tornado.ioloop.IOLoop.instance().add_callback(self.sleep)       # \u8fd9\u6837\u5c06\u5728\u4e0b\u4e00\u8f6e\u4e8b\u4ef6\u5faa\u73af\u6267\u884cself.sleep\n        self.write(&quot;when i sleep&quot;)\n\n    @run_on_executor\n    def sleep(self):\n        time.sleep(5)\n        print(&quot;yes&quot;)\n        return 5\n\n\nif __name__ == &quot;__main__&quot;:\n    tornado.options.parse_command_line()\n    app = tornado.web.Application(handlers=[\n            (r&quot;/sleep&quot;, SleepHandler), ])\n    http_server = tornado.httpserver.HTTPServer(app)\n    http_server.listen(options.port)\n    tornado.ioloop.IOLoop.instance().start()\n\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "python", "slug": "python", "permalink": "/tag/python/"}, {"name": "Tornado", "slug": "Tornado", "permalink": "/tag/Tornado/"}]}, {"title": "\u4f7f\u7528Python\u64cd\u4f5credis\u9047\u5230\u7684\u5751", "date": "2015-05-11T00:37:15-00.00", "path": "/archives/\u4f7f\u7528Python\u64cd\u4f5credis\u9047\u5230\u7684\u5751/", "text": "\u5199\u5728\u524d\u9762\n\u57fa\u4e8ePython3.4\uff0c\u5f80redis\u91cc\u63d2\u5165\u6570\u636e\u540e\u518d\u8bfb\u51fa\u6765\u65f6\u6240\u6709\u952e\u4e0e\u503c\u90fd\u662fbyte\u7c7b\u578b\u7684\uff0c\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u8981\u4f7f\u7528\u8fd9\u4e9b\u503c\u5168\u90e8\u90fd\u5f97\u8f6c\u6362\u7f16\u7801\uff01\u60f3\u60f3\u5c31\u5d29\u6e83\uff01\u4f46\u53c8\u60f3\u60f3\u80af\u5b9a\u4f1a\u6709\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5...\n\u95ee\u9898\u89e3\u51b3\n\u4e8e\u662f\u6211\u67e5\u770b\u4e86python-redis\u8fde\u63a5redis\u7684\u53c2\u6570\uff0c\u53d1\u73b0\u4e86decode_responses\uff0c\u9ed8\u8ba4\u503c\u4e3aFalse\uff0c\u4ece\u53c2\u6570\u540d\u4e0a\u6765\u770b\u597d\u50cf\u5c31\u662f\u5b83\u4e86\u3002\u597d\u4e86\u6211\u4e0d\u626f\u6de1\u4e86\u5176\u5b9e\u6700\u540e\u8bc1\u660e\u5c31\u662f\u5b83\uff01\u6211\u5c06\u5b83\u8bbe\u7f6e\u4e3aTrue\u5c31ok\u4e86\u3002\n\nredis.StrictRedis(host=db_host, port=db_port, password=db_password, decode_responses=True)\n\u6700\u540e\u6709\u70b9\u4e0d\u7406\u89e3\u7684\u662f\uff0c\u8fd9\u79cd\u6709\u7528\u7684\u53c2\u6570\u4e3a\u4ec0\u4e48\u9ed8\u8ba4\u503c\u4e3aFalse\u3002\u3002\u3002\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "python", "slug": "python", "permalink": "/tag/python/"}, {"name": "redis", "slug": "redis", "permalink": "/tag/redis/"}]}, {"title": "Web\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u2014\u2014Selenium", "date": "2014-09-18T23:49:59-00.00", "path": "/archives/Web\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u2014\u2014Selenium/", "text": "\u5728\u6700\u8fd1\u7684Web\u8bfe\u7a0b\u8bbe\u8ba1\u4e0a\u6211\u63a5\u89e6\u5230\u4e86Selenium\u8fd9\u6b3eWeb\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217find_element()\u65b9\u6cd5\u5b9a\u4f4d\u5230\u76ee\u6807\u5143\u7d20\uff0c\u5bf9\u5176\u53d1\u9001\u6a21\u62df\u6309\u952e\u64cd\u4f5c\uff0c\u4f7f\u64cd\u4f5c\u81ea\u52a8\u5316\u3002\n\u9996\u5148\uff0c\u4f7f\u7528pip\u5b89\u88c5Selenium\u7684Python\u6a21\u5757\u3002\nfind_element_by_name()\u65b9\u6cd5\u5c31\u662f\u901a\u8fc7name\u5c5e\u6027\u6765\u5b9a\u4f4d\u5143\u7d20\uff0c\u7136\u540e\u901a\u8fc7send_keys()\u53d1\u9001\u6a21\u62df\u6309\u952e\u3002\u57fa\u4e8e\u8fd9\u6837\u7684\u64cd\u4f5c\u57fa\u672c\u53ef\u4ee5\u5b8c\u6210\u5404\u79cdweb\u4e0b\u7684\u6a21\u62df\u64cd\u4f5c\u3002\u4e0b\u9762\u662f\u6211\u5199\u7684\u4f8b\u7a0b:\nimport time\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\n\nchrome_driver_path = &quot;/usr/local/lib/python2.7/dist-packages/selenium/webdriver/chrome/chromedriver&quot;\ndriver = webdriver.Chrome(chrome_driver_path)\ndriver.get(&quot;http://localhost:8000/&quot;)\ndriver.get(&quot;http://localhost:8000/login&quot;)\nassert &quot;Bookstore&quot; in driver.title\nelem_username = driver.find_element_by_name(&quot;username&quot;)\nelem_username.send_keys(&quot;tiger1&quot;)\nelem_password = driver.find_element_by_name(&quot;password&quot;)\nelem_password.send_keys(&quot;tiger1&quot;)\nelem_password.send_keys(Keys.RETURN)\ntime.sleep(5)\ndriver.close()\n\n\u5982\u679c\u9047\u5230\u4ee5\u4e0b\u9519\u8bef\nselenium.common.exceptions.WebDriverException: Message: 'ChromeDriver executable needs to be available in the path.\n\u89e3\u51b3\u65b9\u6cd5\u5728http://selenium-python.readthedocs.org/faq.html#how-to-use-chromedriver\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "\u6d4b\u8bd5", "slug": "\u6d4b\u8bd5", "permalink": "/tag/\u6d4b\u8bd5/"}, {"name": "python", "slug": "python", "permalink": "/tag/python/"}]}, {"title": "Python\u6a21\u62df\u767b\u5f55wap\u7248\u767e\u5ea6\u8d34\u5427+\u81ea\u52a8\u56de\u8d34", "date": "2014-09-18T23:09:46-00.00", "path": "/archives/Python\u6a21\u62df\u767b\u5f55wap\u7248\u767e\u5ea6\u8d34\u5427+\u81ea\u52a8\u56de\u8d34/", "text": "\u6a21\u62df\u767b\u5f55\u7684\u539f\u7406\u90fd\u5dee\u4e0d\u591a\uff0c\u5927\u81f4\u90fd\u662f\u8fd9\u6837\uff1a\n\n\u6253\u5f00\u9996\u9875\u83b7\u53d6\u76f8\u5173cookie\uff1b\n\u63d0\u4ea4\u767b\u9646\u8868\u5355\uff08\u5373\u7528\u6237\u540d\u4e0e\u5bc6\u7801\uff09\uff1b\n\u786e\u8ba4\u662f\u5426\u767b\u5f55\u6210\u529f\uff1b\n\n\u5982\u679c\u60f3\u4e86\u89e3\u66f4\u5177\u4f53\u7684\u539f\u7406\u4e0e\u76f8\u5173\u77e5\u8bc6\uff0c\u63a8\u8350\u5230\u8be6\u89e3\u6293\u53d6\u7f51\u7ad9\uff0c\u6a21\u62df\u767b\u9646\uff0c\u6293\u53d6\u52a8\u6001\u7f51\u9875\u7684\u539f\u7406\u548c\u5b9e\u73b0\uff08Python\uff0cC#\u7b49\uff09\u3002\uff08\u4e0d\u8fc7\u8fd9\u4e00\u7cfb\u5217\u535a\u6587\u5b9e\u5728\u592a\u7ed5\u592a\u7ed5\u592a\u7ed5\uff0c\u6570\u5341\u7bc7\u6587\u7ae0\u4e92\u76f8\u7a7f\u63d2\u8ba9\u4eba\u5934\u6655\u773c\u82b1\uff0c\u6211\u524d\u540e\u65ad\u65ad\u7eed\u7eed\u5386\u65f6\u51e0\u4e2a\u6708\u624d\u641e\u61c2\u5e76\u7f16\u7801\u6d4b\u8bd5\u6210\u529f\uff09\n\u6a21\u62df\u767b\u5f55\u7684\u5173\u952e\u70b9\u6709\u4e24\u4e2a\uff1a\n1.\u4f7f\u7528\u6293\u5305\u5de5\u5177\uff08\u5982chrome\u5f00\u53d1\u8005\u63a7\u5236\u53f0\uff09\u5206\u6790\u8868\u5355\u63d0\u4ea4\u7684\u771f\u5b9e\u94fe\u63a5\u4e0e\u76f8\u5173get/post\u53c2\u6570\n2.\u7f16\u5199\u7ba1\u7406cookie\u7684\u4ee3\u7801\n\u5bf9\u4e8e\u7b2c\u4e00\u70b9\uff0c\u5728\u4e0a\u8ff0\u94fe\u63a5\u4e2d\u5df2\u7ecf\u6709\u8db3\u591f\u8be6\u7ec6\u7684\u6559\u7a0b\uff0c\u4e0d\u518d\u8d58\u8ff0\uff1b\u81f3\u4e8e\u7b2c\u4e8c\u70b9\uff0c\u4f7f\u7528requests\u6a21\u5757\u5c31\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u5b8c\u7f8e\u5730\u89e3\u51b3\uff0c\u5b83\u53ef\u4ee5\u4fdd\u6301\u7ba1\u7406\u540c\u4e00\u4f1a\u8bdd\u4e2d\u7684cookie\uff0c\u4f7f\u7528\u65b9\u6cd5\u5728\u6211\u4e0a\u4e00\u7bc7\u535a\u6587\u6709\u63d0\u5230\uff0c\u76f8\u5f53\u65b9\u4fbf\u3002\n\u767b\u5f55\u6210\u529f\u4e4b\u540e\uff0c\u5c31\u5dee\u81ea\u52a8\u56de\u5e16\u4e86\u3002wap\u7f51\u9875\u6bd4PC\u7f51\u9875\u7b80\u5355\u5f88\u591a\uff0c\u4f7f\u5f97\u5f88\u591a\u64cd\u4f5c\u90fd\u5bb9\u6613\u4e86\u5f88\u591a\uff0c\u672c\u6b21\u5b9e\u8df5\u4e2d\u6211\u4f7f\u7528\u4e86BeautifulSoup\u6a21\u5757\u6765\u89e3\u6790\u7f51\u9875\u3002\n\u5728\u8fd9\u91cc\u4ee5post\u65b9\u6cd5\u63d0\u4ea4\u7684\u8868\u5355\u4e2d\u5e38\u5e38\u90fd\u4f1a\u5305\u542b\u4e00\u4e9btype=\"hidden\"\u7684\u5143\u7d20\uff0c\u5728\u6a21\u62df\u63d0\u4ea4\u7684\u65f6\u5019\u4e0d\u80fd\u7f3a\u5c11\u3002\n\n\u7ed3\u5c3e\u8bed\n\u8bdd\u8bf4\u5f53\u5b8c\u6210\u4e00\u9879\u66fe\u7ecf\u7684\u96be\u9898\u4e4b\u540e\uff0c\u603b\u662f\u53d1\u73b0\u6ca1\u4ec0\u4e48\u8be6\u7ec6\u8bb0\u5f55\u7684\u6b32\u671b\u4e86\u3002\u3002\u5728\u8fd9\u91cc\u6211\u5927\u6982\u63cf\u8ff0\u4e86\u4e00\u4e0b\u5b9e\u73b0\u7684\u8def\u7ebf\uff0c\u76f8\u5173\u4ee3\u7801\u6211\u653e\u5728\u6211\u7684Github\u4e0a\u4e86\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\u6216\u5efa\u8bae\u6b22\u8fce\u4ea4\u6d41\uff01\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "python", "slug": "python", "permalink": "/tag/python/"}]}, {"title": "Requests\u6a21\u5757\u4e2d\u6301\u7eed\u6027\u7684 Cookie \u4f1a\u8bdd", "date": "2014-08-28T11:41:38-00.00", "path": "/archives/Requests\u6a21\u5757\u4e2d\u6301\u7eed\u6027\u7684 Cookie \u4f1a\u8bdd/", "text": "Requests\u6a21\u5757\u6709\u5982\u4e0b\u4f18\u70b9\uff1a\n\n\u56fd\u9645\u5316\u57df\u540d\u548c URLs\nKeep-Alive &amp; \u8fde\u63a5\u6c60\n\u6301\u7eed\u6027\u7684 Cookie \u4f1a\u8bdd\n\u7c7b\u6d4f\u89c8\u5668\u5f0f\u7684 SSL \u52a0\u5bc6\u8ba4\u8bc1\n\u57fa\u672c/\u7cbe\u7b80\u5f0f\u7684\u8eab\u4efd\u8ba4\u8bc1\n\u4f18\u96c5\u7684\u952e/&#20540; Cookies\n\u81ea\u52a8\u89e3\u538b\nUnicode \u7f16\u7801\u7684\u54cd\u5e94\u4e3b\u4f53\n\u591a\u6bb5\u6587\u4ef6\u4e0a\u4f20\n\u8fde\u63a5\u8d85\u65f6\n\u652f\u6301 .netrc\n\u9002\u7528\u4e8e Python 2.6\u20143.3\n\u5b89\u5168\u7684\u7ebf\u7a0b\u4f7f\u7528\n\n\u5176\u4e2d\u6700\u5438\u5f15\u6211\u7684\u5c31\u662f\u201c\u6301\u7eed\u6027\u7684 Cookie \u4f1a\u8bdd\u201d\u529f\u80fd\uff0c\u5b83\u63a5\u7ba1\u4e86Cookie\u7ba1\u7406\u65b9\u9762\u7684\u5de5\u4f5c\uff0c\u4f7f\u6211\u4eec\u5728\u5b9e\u73b0\u6a21\u62df\u767b\u5f55\u65f6\u7684\u5de5\u4f5c\u91cf\u5927\u5927\u51cf\u5c11\u3002\u4e0b\u9762\u6211\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\uff1a\n\u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd\uff1a\nsession = requests.session()\n\n\u5728\u8fd9\u4e4b\u540e\uff0c\u5982\u679c\u662fget\u65b9\u5f0f\u6253\u5f00\u94fe\u63a5\uff0c\u4f8b\u5982\u767e\u5ea6\uff0c\u5219\u662f\uff1a\npage = session.get(&quot;http://www.baidu.com&quot;)\n\n\u8fd9\u91cc\u7684page\u53d8\u91cf\u662f\u4e00\u4e2aResponse\u5bf9\u8c61\uff0cpage.content\u5373\u662f\u8fd9\u4e2aget\u8bf7\u6c42\u8fd4\u56de\u7684HTML\u5185\u5bb9\u3002\u8fd9\u65f6session\u81ea\u52a8\u5c06\u767e\u5ea6\u8fd4\u56de\u7684Cookie\u7ed9\u8bb0\u5f55\u4e0b\u6765\u3002\npost\u8bf7\u6c42\u540c\u6837\u7c7b\u4f3c\u3002url\uff0cpostData\uff0cheaders\uff0cproxy\u7b49\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\uff0c\u975e\u5e38\u65b9\u4fbf\uff01\nRequests\u6a21\u5757\u672c\u8eab\u5c31\u662f\u4e3a\u4e86\u6613\u7528\u800c\u751f\uff0c\u5b83\u7684\u6587\u6863\u4e5f\u975e\u5e38\u7b80\u6d01\u3002\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "python", "slug": "python", "permalink": "/tag/python/"}]}, {"title": "placement new\u7684\u4f7f\u7528\u53ca\u597d\u5904", "date": "2014-08-17T16:59:02-00.00", "path": "/archives/placement new\u7684\u4f7f\u7528\u53ca\u597d\u5904/", "text": "\u8be6\u7ec6\u7684\u4ecb\u7ecd\u53ef\u4ee5\u770b\u8fd9\u51e0\u7bc7\u6587\u7ae0\uff1a\nC++\u4e2dplacement new\u64cd\u4f5c\u7b26\uff08\u7ecf\u5178\uff09\nPlacement new\u7684\u7528\u6cd5\u53ca\u7528\u9014\n\uff08\u8f6c\uff09\u9075\u5faaplacement new\u7684\u7528\u6cd5\u89c4\u8303\n\u5f52\u7eb3\u4e00\u4e0bplacement new\u7684\u597d\u5904\uff1a\n\n\u5728\u5df2\u5206\u914d\u597d\u7684\u5185\u5b58\u4e0a\u8fdb\u884c\u5bf9\u8c61\u7684\u6784\u5efa\uff0c\u6784\u5efa\u901f\u5ea6\u5feb\u3002\n\n\u53ef\u4ee5\u53cd\u590d\u5229\u7528\u540c\u4e00\u5757\u5df2\u5206\u914d\u597d\u7684\u5185\u5b58\uff0c\u6709\u6548\u7684\u907f\u514d\u5185\u5b58\u788e\u7247\u95ee\u9898\u3002\n\n\u5efa\u7acb\u5bf9\u8c61\u6570\u7ec4\u65f6\uff0c\u80fd\u591f\u8c03\u7528\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002\n\n\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "C++", "slug": "C++", "permalink": "/tag/C++/"}]}, {"title": "\u5728Ubuntu14.04\u4e0b\u4f7f\u7528ap-hotspot\u5efa\u7acb\u65e0\u7ebf\u70ed\u70b9\uff08AP mode\uff09", "date": "2014-08-15T22:36:02-00.00", "path": "/archives/\u5728Ubuntu14.04\u4e0b\u4f7f\u7528ap-hotspot\u5efa\u7acb\u65e0\u7ebf\u70ed\u70b9\uff08AP mode\uff09/", "text": "\u4ecehttps://launchpad.net/~nilarimogard/+archive/ubuntu/webupd8/+packages \u4e0b\u8f7d\u6700\u65b0\u7248ap-hotspot\u5e76\u5b89\u88c5\uff0c\u6211\u4f7f\u7528\u7684\u662fap-hotspot - 0.3.1-1~webupd8~0\u3002\u7ec8\u7aef\u4e0b\u6267\u884csudo ap-hotspot configure\n\u8fd9\u4e00\u6b65\u4f1a\u68c0\u67e5ubuntu\u7684\u7f51\u7edc\u548cWIFI\u63a5\u53e3\uff0c\u786e\u5b9a\u540e\u4f1a\u63d0\u793a\u4f60\u914d\u7f6e\u70ed\u70b9\uff0c\u8f93\u5165ssid\u548c\u5bc6\u7801\u4e4b\u7c7b\u7684\u5c31\u884c\u4e86\n\u63a5\u7740\u6267\u884csudo ap-hotspot start\u5373\u53ef\u3002\n\n\u53ef\u662f\u73b0\u5b9e\u603b\u662f\u6b8b\u9177\u7684\uff0c\u5728Ubuntu14.04\u4e0b\u8fd9\u6837\u8fd8\u4e0d\u80fd\u591f\u6210\u529f\u3002\u56e0\u4e3a\u81ea\u5e26\u7684\u65b0\u7248hostapd\u6709bug\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u964d\u7ea7\u5230\u4e00\u4e2a\u53ef\u7528\u7684\u65e7\u7248\u672c\u3002\u53c2\u8003\u94fe\u63a5\uff1ahttp://askubuntu.com/questions/464178/ap-hotspot-not-creating-in-kubuntu-14-04\n\u6309\u8fd9\u94fe\u63a5\u64cd\u4f5c\uff0c\u5b89\u88c5\u597d\u65e7\u7248hostapd\u4e4b\u540e\uff0c\u4f7f\u7528ap-hotspot\u4f1a\u63d0\u793a\u6ca1\u6709\u5b89\u88c5\uff0c\u9700\u8981\u91cd\u65b0\u5b89\u88c5\u5e76\u914d\u7f6e\u3002\u6700\u7ec8\u5373\u53ef\u6210\u529f\u5efa\u7acbAP\u70ed\u70b9\u3002\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "ubuntu", "slug": "ubuntu", "permalink": "/tag/ubuntu/"}]}, {"title": "\u3010C++\u5b9e\u73b0\u3011HeadFirst\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u89c2\u5bdf\u8005\u6a21\u5f0f", "date": "2014-08-02T14:42:15-00.00", "path": "/archives/\u3010C++\u5b9e\u73b0\u3011HeadFirst\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u89c2\u5bdf\u8005\u6a21\u5f0f/", "text": "\u89c2\u5bdf\u8005\u6a21\u5f0f\u5b9a\u4e49\u4e86\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e00\u5bf9\u591a\u4f9d\u8d56\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6539\u53d8\u72b6\u6001\u65f6\uff0c\u5b83\u7684\u6240\u6709\u4f9d\u8d56\u8005\u90fd\u4f1a\u6536\u5230\u901a\u77e5\u5e76\u81ea\u52a8\u66f4\u65b0\u3002\n\n\u4e00\u65b9\u53ef\u79f0\u4e3a\u4e3b\u9898\uff08subject\uff09\uff0c\u53e6\u4e00\u65b9\u53ef\u79f0\u4e3a\u89c2\u5bdf\u8005\uff08observer\uff09\uff0c\u4e00\u4e2a\u4e3b\u9898\u53ef\u62e5\u6709\u591a\u4e2a\u89c2\u5bdf\u8005\u3002\u5f53\u4e3b\u9898\u7684\u6570\u636e\u6709\u53d8\u52a8\u65f6\uff0c\u5c31\u4f1a\u901a\u77e5\u6240\u6709\u8ba2\u9605\u4e86\u5b83\u7684\u89c2\u5bdf\u8005\u3002\u5728\u8fd9\u4e4b\u540e\u7684\u64cd\u4f5c\u6709\u4e24\u79cd\uff1a\n\n\u63a8\uff1a\u4e3b\u9898\u76f4\u63a5\u5c06\u6570\u636e\u63a8\u9001\u7ed9\u6240\u6709\u89c2\u5bdf\u8005\u3002\n\u62c9\uff1a\u4e3b\u9898\u901a\u77e5\u4e86\u6240\u6709\u89c2\u5bdf\u8005\u540e\uff0c\u6bcf\u4e2a\u89c2\u5bdf\u8005\u518d\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u4ece\u4e3b\u9898\u62c9\u53d6\u6240\u9700\u6570\u636e\u3002\n\n\u4e0b\u9762\u662f\u6211\u7528C++\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u7684update\u65b9\u6cd5\u91c7\u7528\u4e86\u201c\u62c9\u201d\u7684\u65b9\u5f0f\u4ece\u4e3b\u9898\u83b7\u53d6\u6570\u636e\u3002\n//MyObserver.h\n#ifndef MYOBSERVER_H_INCLUDED\n#define MYOBSERVER_H_INCLUDED\n\n#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#define TRUE 1;\n#define FALSE 0;\n\nclass MyObserver{\n    public:\n        virtual void update();\n        virtual void display();\n};\n\nclass MyObservable{\n    protected:\n        std::vector&lt;MyObserver*&gt;observers;\n    public:\n        //MyObservable();\n        ~MyObservable();\n        int addObserver(MyObserver* obs);\n        int deleteObserver(MyObserver* obs);\n        int notifyObservers();\n\n};\n#endif // MYOBSERVER_H_INCLUDED\n\n//MyObserver.cpp\n#include &quot;MyObserver.h&quot;\nusing std::cout;\nusing std::vector;\n\nvoid MyObserver::update(){\n    cout&lt;&lt;&quot;I&#39;m update method ofbase class.\\n&quot;;\n}\nvoid MyObserver::display(){\n    cout&lt;&lt;&quot;I&#39;m display method ofbase class.\\n&quot;;\n}\n\nMyObservable::~MyObservable(){\n    observers.clear();\n}\nint MyObservable::addObserver(MyObserver* obs){\n    observers.push_back(*obs);\n    return TRUE;\n}\nint MyObservable::deleteObserver(MyObserver* obs){\n    for(vector&lt;MyObserver*&gt;::iterator it = observers.begin();it != observers.end();++it){\n        if((*it) == *obs){\n            observers.erase(it);\n            return TRUE;\n        }\n    }\n    return FALSE;\n}\n int MyObservable::notifyObservers(){\n    for(vector&lt;MyObserver*&gt;::iterator it = observers.begin();it != observers.end();++it){\n        (*it)-&gt;update();\n    }\n    return TRUE;\n}\n\n//main.cpp\n//#include &lt;iostream&gt;\n#include &quot;MyObserver.h&quot;\nusing std::cout;\nusing std::endl;\nclass WeatherData:public MyObservable{\n    private:\n        float temperature;\n        float humidity;\n        float pressure;\n    public:\n        void setMeasurements(float temperature,float humidity,float pressure){\n            this-&gt;temperature=temperature;\n            this-&gt;humidity=humidity;\n            this-&gt;pressure=pressure;\n            measurementsChanged();\n        }\n        void measurementsChanged(){\n            notifyObservers();\n        }\n        float getTemperature(){\n            return temperature;\n        }\n        float getHumidity(){\n            return humidity;\n        }\n        float getPressure(){\n            return pressure;\n        }\n};\n\nclass CurrentDisplay:public MyObserver{\n    private:\n        WeatherData* weatherData;\n        float temperature;\n        float humidity;\n        float pressure;\n    public:\n        CurrentDisplay(WeatherData* weatherData){\n            this-&gt;weatherData=*weatherData;\n            this-&gt;weatherData-&gt;addObserver(*this);\n        }\n        CurrentDisplay(){\n            cout&lt;&lt;&quot;You have to give a parameter.\\n&quot;;\n        }\n        ~CurrentDisplay(){\n            weatherData-&gt;deleteObserver(*this);\n        }\n        void update(){\n            temperature=weatherData-&gt;getTemperature();\n            humidity=weatherData-&gt;getHumidity();\n            pressure=weatherData-&gt;getPressure();\n            display();\n        }\n        void display(){\n            cout&lt;&lt;&quot;temperature:&quot;&lt;&lt;temperature&lt;&lt;&quot;\\nhumidity:&quot;&lt;&lt;humidity&lt;&lt;&quot;\\npressure:&quot;&lt;&lt;pressure&lt;&lt;endl;\n        }\n};\nint main()\n{\n    WeatherData weatherdata;\n    CurrentDisplay currentdisplay(weatherdata);\n    weatherdata.setMeasurements(80,65,30.4);\n    weatherdata.setMeasurements(82,70,29.2);\n    weatherdata.setMeasurements(78,90,29.2);\n    currentdisplay.~CurrentDisplay();\n    CurrentDisplay test2(weatherdata);\n    weatherdata.setMeasurements(78,912,29.2);\n    return 0;\n}\n\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "\u8bbe\u8ba1\u6a21\u5f0f", "slug": "\u8bbe\u8ba1\u6a21\u5f0f", "permalink": "/tag/\u8bbe\u8ba1\u6a21\u5f0f/"}, {"name": "C++", "slug": "C++", "permalink": "/tag/C++/"}]}, {"title": "Codechef July Challenge 2014\u90e8\u5206\u9898\u89e3", "date": "2014-07-14T17:31:52-00.00", "path": "/archives/Codechef July Challenge 2014\u90e8\u5206\u9898\u89e3/", "text": "Dish Owner\uff08\u5e76\u67e5\u96c6\uff09\n\u94fe\u63a5\uff1ahttp://www.codechef.com/JULY14/problems/DISHOWN/\n\u9898\u610f\u5206\u6790\uff1a\u672c\u9898\u4e3b\u8981\u64cd\u4f5c\u5c31\u662f\u7ed9\u51fa0 x y\u65f6\uff0c\u62e5\u6709\u7b2cx\u9053\u83dc\u7684\u53a8\u5e08\u4e0e\u62e5\u6709\u7b2cy\u9053\u83dc\u7684\u53a8\u5e08pk\uff0c\u8c01\u62e5\u6709\u7684\u6240\u6709\u83dc\u7684\u5176\u4e2d\u4e00\u9053\u83dc\uff08\u4e0d\u4e00\u5b9a\u662fx\u6216y\uff09\u7684\u5206\u503c\u6bd4\u8f83\u9ad8\u8c01\u5c31\u83b7\u80dc\uff0c\u5e76\u8d62\u5f97loser\u7684\u6240\u6709\u83dc\u3002\u5373\u6bd4\u8f83\u7684\u662f\u6bcf\u4e2a\u4eba\u5206\u503c\u6700\u9ad8\u7684\u83dc\uff0c\u6240\u4ee5\u5bf9\u4e8e\u975eloser\u7684\u4eba\u6765\u8bf4\uff0c\u4ed6\u7684\u5206\u503c\u6700\u9ad8\u7684\u83dc\u662f\u4e0d\u53d8\u7684\u3002\u7efc\u5408\u9898\u610f\u7528\u5e76\u67e5\u96c6\u6613\u89e3\u3002\n#include &lt;cstdio&gt;\n\nconst int Maxn=10004;\nint To[Maxn];\nint val[Maxn];\n\nint _find(int x){\n    if(To[x]!=x)\n        To[x]=_find(To[x]);     //\u8def\u5f84\u538b\u7f29\n    return To[x];\n}\n\nvoid _merge(int x,int y){\n    int fx=_find(x);\n    int fy=_find(y);\n    To[fy]=fx;\n}\n\nint main()\n{\n    int T;\n    scanf(&quot;%d&quot;,&amp;T);\n    while(T--){\n        int n;\n        scanf(&quot;%d&quot;,&amp;n);\n        for(int i=1;i&lt;=n;i++){\n            scanf(&quot;%d&quot;,&amp;val[i]);\n            To[i]=i;\n        }\n        int query;\n        scanf(&quot;%d&quot;,&amp;query);\n        while(query--){\n            int op;\n            scanf(&quot;%d&quot;,&amp;op);\n            if(op==0){\n                int x,y;\n                scanf(&quot;%d%d&quot;,&amp;x,&amp;y);\n                int fx=_find(x);    //\u83b7\u5f97x\uff0cy\u7684\u7236\u8282\u70b9\n                int fy=_find(y);\n                if(fx==fy)\n                    puts(&quot;Invalid query!&quot;);\n                else{\n                    if(val[fx]&gt;val[fy]){\n                        _merge(x,y);\n                    }\n                    else if(val[fx]&lt;val[fy]){\n                        _merge(y,x);\n                    }\n                }\n            }\n            else{\n                int x;\n                scanf(&quot;%d&quot;,&amp;x);\n                printf(&quot;%d\\n&quot;,_find(x));\n            }\n        }\n    }\n    return 0;\n}\n\nGarden Game\n\u94fe\u63a5\uff1ahttp://www.codechef.com/JULY14/problems/SGARDEN\n\u9898\u610f\u5206\u6790\uff1a\u6bcf\u54cd\u54e8\u4e00\u6b21\uff0c\u5904\u5728\u4f4d\u7f6ei\u7684\u4eba\u5c31\u79fb\u52a8\u5230\u4f4d\u7f6eA[i]\uff0c\u5176\u4e2dA[i]\u662f\u4e0d\u91cd\u590d\u7684\u3002\u6613\u77e5\u7ecf\u8fc7\u6709\u9650\u6b21\u54cd\u54e8\u540e\uff0c\u5fc5\u5b9a\u80fd\u591f\u6062\u590d\u5230\u521d\u59cb\u6001\uff1b\u5176\u4e2d\u4f1a\u51fa\u73b0\u591a\u4e2a\u4e92\u4e0d\u76f8\u5173\u7684\u5faa\u73af\uff0c\u6c42\u51fa\u6bcf\u4e2a\u5faa\u73af\u7684\u4eba\u6570\uff0c\u8ba1\u7b97\u5176\u6700\u5c0f\u516c\u500d\u6570\u5373\u53ef\u3002\u6ce8\u610f\u7ed3\u679c\u4f1a\u8d85\u8fc7int\u7684\u8303\u56f4\u3002\nPython\u7248\uff1a\n#coding:utf8\ndef gcd(a, b):  #\u8ba1\u7b97a\uff0cb\u7684\u6700\u5927\u516c\u7ea6\u6570\n    if(b == 0):\n        return a\n    return int(gcd(b, a%b))\n\ndef fun(a, b):\n    _gcd=gcd(a, b)\n    product=a//_gcd*b   #\u7528//\u8fd0\u7b97\u7b26\u4fdd\u8bc1\u7ed3\u679c\u662f\u6574\u6570\n    return int(product)\n\nT = int(input())\nwhile(T &gt; 0):\n    n = int(input())\n    num = [0]\n    vis = [0]\n    x = input()\n    for i in x.split():\n        num.append(int(i))\n        vis.append(0)\n    div = []\n    st = 1\n    #\u8ba1\u7b97\u6bcf\u4e2a\u5faa\u73af\u7684\u4eba\u6570\n    while(st &lt;= n):\n        if(vis[st] == 0):\n            mark=st\n            vis[st]=1\n            cnt=1\n            nx=num[st]\n            while(mark != nx):\n                vis[nx] = 1\n                nx = num[nx]\n                cnt += 1\n            if(cnt not in div): \n                div.append(cnt)\n        st += 1\n    ans = 1\n    for each in div:\n        ans = fun(ans,each)\n    print(int(ans%1000000007))\n    T -= 1\n\nC++\u7248\uff1a\n\u7531\u4e8e\u4e2d\u95f4\u8fd0\u7b97\u7ed3\u679c\u751a\u81f3\u4f1a\u8d85\u51fa64\u4f4d\u6574\u5f62\u7684\u8303\u56f4\uff0c\u4e8e\u662f\u6211\u91c7\u7528\u4e86\u56e0\u6570\u5206\u89e3\u7684\u65b9\u6cd5\u3002\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nconst int Maxn=100005;\nconst int MOD=1000000007;\nint num[Maxn];\nbool vis[Maxn];\nint prime[10000],primecount=0;\nint totalcount[10000];\n\nvoid getprime(){\n    memset(vis,0,sizeof(vis));\n    int i,j;\n    for(i=2;i&lt;100000;i++){\n        if(!vis[i]){\n            prime[primecount++]=i;\n            for(j=i+i;j&lt;100000;j+=i){\n                vis[j]=1;\n            }\n        }\n    }\n}\nvoid getdivsor(int param){\n    int i;\n    int num=param;\n    int cnt;\n    for(i=0;prime[i]&lt;=num&amp;&amp;i&lt;primecount;i++){\n        if(num%prime[i]==0){\n            cnt=0;\n            while(num%prime[i]==0){\n                cnt++;\n                num/=prime[i];\n            }\n            if(totalcount[i]&lt;cnt)\n                totalcount[i]=cnt;\n        }\n    }\n}\nint main()\n{\n    getprime();//\u8ba1\u7b97\u51fa10\u4e07\u5185\u7684\u6240\u6709\u8d28\u6570\n    int T;\n    scanf(&quot;%d&quot;,&amp;T);\n    while(T--){\n        int n;\n        scanf(&quot;%d&quot;,&amp;n);\n        for(int i=1;i&lt;=n;i++){\n            scanf(&quot;%d&quot;,&amp;num[i]);\n        }\n        memset(vis,0,sizeof(vis));\n        int st=1,nx,cnt,mark;\n        set&lt;int&gt; div;\n        while(st&lt;=n){\n            if(vis[st]==0){\n                mark=st;\n                vis[st]=1;\n                cnt=1;\n                nx=num[st];\n                while(mark!=nx){\n                    vis[nx]=1;\n                    nx=num[nx];\n                    ++cnt;\n                }\n                div.insert(cnt);\n            }\n            ++st;\n        }\n        long long ans=1;\n        set&lt;int&gt;::iterator it;\n        for(it=div.begin();it!=div.end();it++){\n            getdivsor(*it);\n        }\n        for(int i=0;i&lt;primecount;i++){\n            long long temp=1;\n            while(totalcount[i]&gt;0){\n                temp=(temp*prime[i])%MOD;\n                totalcount[i]--;\n            }\n            ans=(ans*temp)%MOD;\n        }\n        printf(&quot;%lld\\n&quot;,ans);\n    }\n    return 0;\n}\n\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "C++", "slug": "C++", "permalink": "/tag/C++/"}, {"name": "Codechef", "slug": "Codechef", "permalink": "/tag/Codechef/"}]}, {"title": "Python\u722c\u53d6\u4eac\u4e1c\u5546\u54c1\u6570\u636e", "date": "2014-06-16T17:08:41-00.00", "path": "/archives/Python\u722c\u53d6\u4eac\u4e1c\u5546\u54c1\u6570\u636e/", "text": "\u5bf9\u4eac\u4e1c\u67d0\u4e00\u5546\u54c1\u4fe1\u606f\u9875\u9762\u7684HTML\u4ee3\u7801\u8fdb\u884c\u5206\u6790\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684\u56fe\u4e66\u4ea7\u54c1\u4fe1\u606f\u9875\u9762\u90fd\u542b\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff08\u4e0d\u540c\u7c7b\u7684\u5546\u54c1\u9875\u9762\u6709\u4e9b\u4e0d\u540c\uff09\uff1a\nwindow.pageConfig={compatible:true,searchType: 1,product:{&quot;skuid&quot;:&quot;11408255&quot;,&quot;name&quot;:&quot;\\u4f17\\u795e\\u7684\\u536b\\u661f\\uff1a\\u4e2d\\u56fd\\u7981\\u533a&quot;,&quot;skuidkey&quot;:&quot;0337880E5D0F419E033111D988169617&quot;,&quot;href&quot;:&quot;http:\\/\\/item.jd.com\\/11408255.html&quot;,&quot;src&quot;:&quot;g14\\/M01\\/13\\/0F\\/rBEhVVMPSugIAAAAAAViPV7x4XAAAJS4gLble8ABWJV204.jpg&quot;,&quot;jqimg&quot;:&quot;http:\\/\\/img11.360buyimg.com\\/n0\\/g14\\/M01\\/13\\/0F\\/rBEhVVMPSugIAAAAAAViPV7x4XAAAJS4gLble8ABWJV204.jpg&quot;,&quot;wMaprice&quot;:&quot;32.00&quot;,&quot;wMeprice&quot;:&quot;23.40&quot;,&quot;cat&quot;:[1713,9340,9346],&quot;brand&quot;:&quot;&quot;,&quot;tips&quot;:false,&quot;type&quot;:1,&quot;n&quot;:false,&quot;g&quot;:false}};\n\n\u663e\u7136\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u5546\u54c1\u4fe1\u606f\uff0cPython\u4ee3\u7801\u5982\u4e0b\uff1a\nimport json\nimport re\nimport urllib\nfor i in range(11348876,11348999):#\u6570\u5b57\u4ee3\u8868\u4eac\u4e1c\u5546\u54c1\u7f16\u53f7\n    URL=&#39;http://item.jd.com/%s.html&#39;%(i)\n    page=urllib.urlopen(URL).read()\n    idx=page.find(&#39;product:&#39;)\n    if(idx&gt;=0):\n        idx+=8\n        res=re.search(r&#39;{.+?}&#39;,page[idx:])    #\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\n        text=json.loads(res.group())    #\u7528json\u8bfb\u53d6\n        print(&quot;%s,%s,%s,%s,%s&quot;%(text[&#39;skuid&#39;],text[&#39;wMaprice&#39;],text[&#39;name&#39;],text[&#39;href&#39;],text[&#39;jqimg&#39;]))\n\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "python", "slug": "python", "permalink": "/tag/python/"}]}, {"title": "sae python\u4e2dMysql\u4e2d\u6587\u4e71\u7801\u7684\u89e3\u51b3", "date": "2014-06-16T16:54:12-00.00", "path": "/archives/sae python\u4e2dMysql\u4e2d\u6587\u4e71\u7801\u7684\u89e3\u51b3/", "text": "\u4e00\u5f00\u59cb\u6211\u7528\u7684\u662f\uff1a\ndb=MySQLdb.connect(db=sae.const.MYSQL_DB,user=sae.const.MYSQL_USER,passwd=sae.const.MYSQL_PASS,host=sae.const.MYSQL_HOST,port=int(sae.const.MYSQL_PORT))\n\n\u6570\u636e\u5e93\u7f16\u7801\u4e0epython\u4ee3\u7801\u7684\u7f16\u7801\u90fd\u5df2\u8bbe\u4e3autf8\uff0c\u5728PHPMyAdmin\u4e2d\u6dfb\u52a0\u4e2d\u6587\u8bb0\u5f55\uff0c\u5728\u7f51\u9875\u67e5\u8be2\u663e\u793a\u4e2d\u5374\u663e\u793a\u4e71\u7801\uff0c\u6211\u5728\u7f51\u4e0a\u5404\u79cd\u641c\u7d22\u90fd\u627e\u4e0d\u5230\u89e3\u51b3\u65b9\u6cd5\u3002\u6700\u540e\u7ec8\u4e8e\u53d1\u73b0\u5728\u8fde\u63a5\u6570\u636e\u5e93\u65f6\u6dfb\u52a0charset\u53c2\u6570\u4e3autf8\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\ndb=MySQLdb.connect(db=sae.const.MYSQL_DB,user=sae.const.MYSQL_USER,passwd=sae.const.MYSQL_PASS,host=sae.const.MYSQL_HOST,port=int(sae.const.MYSQL_PORT),charset=&#39;utf8&#39;)\n\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "sae", "slug": "sae", "permalink": "/tag/sae/"}, {"name": "python", "slug": "python", "permalink": "/tag/python/"}]}, {"title": "\u3010C++\u5b9e\u73b0\u3011HeadFirst\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u7b56\u7565\u6a21\u5f0f", "date": "2014-06-05T22:48:12-00.00", "path": "/archives/\u3010C++\u5b9e\u73b0\u3011HeadFirst\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u7b56\u7565\u6a21\u5f0f/", "text": "\u7b56\u7565\u6a21\u5f0f\u5b9a\u4e49\u4e86\u7b97\u6cd5\u5bb6\u65cf\uff0c\u5206\u522b\u5c01\u88c5\u8d77\u6765\uff0c\u8ba9\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u66ff\u6362\uff0c\u6b64\u6a21\u5f0f\u8ba9\u7b97\u6cd5\u7684\u53d8\u5316\u72ec\u7acb\u4e8e\u4f7f\u7528\u7b97\u6cd5\u7684\u5ba2\u6237\u3002\n\nHead First\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u4ecb\u7ecd\u7b56\u7565\u6a21\u5f0f\u65f6\u4ee5Duck\u7c7b\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u5176\u4e2d\u7528flyBehavior\u548cquackBehavior\u4e24\u4e2a\u63a5\u53e3\u5f15\u7528\u53d8\u91cf\u4ee3\u8868\u9e2d\u5b50\u98de\u884c\u548c\u9e2d\u5b50\u53eb\u8fd9\u4e24\u79cd\u884c\u4e3a\uff0c\u901a\u8fc7\u6539\u53d8flyBehavior\u548cquackBehavior\u6765\u6ee1\u8db3\u4e0d\u540c\u7684Duck\u5b50\u7c7b\u7684\u4e0d\u540c\u884c\u4e3a\uff0c\u8fd9\u6837\u5e26\u6765\u7684\u597d\u5904\u5c31\u662f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6539\u53d8Duck\u5b50\u7c7b\u7684\u884c\u4e3a\u3002\u4e0b\u9762\u662f\u6211\u7528C++\u6539\u5199\u7684\u4ee3\u7801\u3002\n//MyDuck.h\n#ifndef MYDUCK_INCLUDED\n#define MYDUCK_INCLUDED\n\n//\u5728\u8fd9\u91cc\u6211\u7528\u62bd\u8c61\u7c7b\u4ee3\u66ff\u539f\u6587\u4e2d\u7684\u63a5\u53e3\nclass FlyBehavior{\n    public:\n        virtual void fly()=0;\n};\nclass QuackBehavior{\n    public:\n        virtual void quack()=0;\n};\nclass FlyWithWings:public FlyBehavior{\n    public:\n        void fly();\n};\nclass FlyNoWay:public FlyBehavior{\n    public:\n        void fly();\n};\nclass FlyRocketPowerd:public FlyBehavior{\n    public:\n        void fly();\n};\nclass Quack:public QuackBehavior{\n    public:\n        void quack();\n};\nclass Squeak:public QuackBehavior{\n    public:\n        void quack();\n};\nclass MuteQuack:public QuackBehavior{\n    public:\n        void quack();\n};\nclass Duck{\n    public:\n        Duck();\n        void swim();\n        virtual void display()=0;\n        void performQuack();\n        void performFly();\n        void setQuackBehavior(QuackBehavior *newBehavior);\n        void setFlyBehavior(FlyBehavior *newBehavior);\n    //\u5728\u8fd9\u91cc\u6211\u7528\u57fa\u7c7b\u6307\u9488\u4ee3\u66ff\u539f\u6587\u4e2d\u7684\u63a5\u53e3\u5f15\u7528\u53d8\u91cf\n    protected:\n        FlyBehavior *flyBehavior;\n        QuackBehavior *quackBehavior;\n};\nclass MallardDuck:public Duck{\n    public:\n        virtual void display();\n        MallardDuck();\n};\n#endif // MYDUCK_INCLUDED\n\n////MyDuck.cpp\n#include &quot;MyDuck&quot;\n#include &lt;iostream&gt;\nusing std::cout;\nusing std::endl;\n//\u5b9a\u4e49\u884c\u4e3a\u7c7b\nvoid FlyWithWings::fly(){\n    cout&lt;&lt;&quot;I&#39;m flying with wings!!&quot;&lt;&lt;endl;\n}\nvoid FlyNoWay::fly(){\n    cout&lt;&lt;&quot;I can&#39;t fly5555!!&quot;&lt;&lt;endl;\n}\nvoid FlyRocketPowerd::fly(){\n    cout&lt;&lt;&quot;I&#39;m flying with a ROCKET!!&quot;&lt;&lt;endl;\n}\nvoid Quack::quack(){\n    cout&lt;&lt;&quot;Quack!!!&quot;&lt;&lt;endl;\n}\nvoid Squeak::quack(){\n    cout&lt;&lt;&quot;Squeak!!!&quot;&lt;&lt;endl;\n}\nvoid MuteQuack::quack(){\n    cout&lt;&lt;&quot;MuteQuack!!!&quot;&lt;&lt;endl;\n}\n//\u5b9a\u4e49Duck\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\nvoid Duck::swim(){\n    cout&lt;&lt;&quot;I&#39;m swimming!!!&quot;&lt;&lt;endl;\n}\nvoid Duck::performQuack(){\n    quackBehavior-&gt;quack();\n}\nvoid Duck::performFly(){\n    flyBehavior-&gt;fly();\n}\nvoid Duck::setFlyBehavior(FlyBehavior *newBehavior){\n    flyBehavior=newBehavior;\n}\nvoid Duck::setQuackBehavior(QuackBehavior *newBehavior){\n    quackBehavior=newBehavior;\n}\nDuck::Duck(){\n}\n//\u5b9a\u4e49MallardDuck\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\nvoid MallardDuck::display(){\n    cout&lt;&lt;&quot;I&#39;m MallardDuck!!!&quot;&lt;&lt;endl;\n}\nMallardDuck::MallardDuck(){\n    flyBehavior=new FlyWithWings;\n    quackBehavior=new Quack;\n}\n\n//MyDuckMain.cpp\n#include &quot;MyDuck&quot;\nint main()\n{\n    Duck *mallard=new MallardDuck;\n    mallard-&gt;display();\n    mallard-&gt;performFly();\n    mallard-&gt;performQuack();\n    mallard-&gt;swim();\n    mallard-&gt;setFlyBehavior(new FlyNoWay);\n    mallard-&gt;performFly();\n    mallard-&gt;setFlyBehavior(new FlyRocketPowerd);\n    mallard-&gt;performFly();\n    return 0;\n}\n\n\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a\n\nI'm MallardDuck!!!\nI'm flying with wings!!\nQuack!!!\nI'm swimming!!!\nI can't fly5555!!\nI'm flying with a ROCKET!!\n\u76f8\u5173\u94fe\u63a5\uff1ahttp://blog.csdn.net/zhangzijiejiayou/article/details/27306819\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "C++", "slug": "C++", "permalink": "/tag/C++/"}, {"name": "\u8bbe\u8ba1\u6a21\u5f0f", "slug": "\u8bbe\u8ba1\u6a21\u5f0f", "permalink": "/tag/\u8bbe\u8ba1\u6a21\u5f0f/"}]}, {"title": "\u6234\u5c14\u7b14\u8bb0\u672cwin8.1+UEFI\u4e0b\u5b89\u88c5Ubuntu14.04\u8fc7\u7a0b\u8bb0\u5f55", "date": "2014-05-11T22:41:59-00.00", "path": "/archives/\u6234\u5c14\u7b14\u8bb0\u672cwin8.1+UEFI\u4e0b\u5b89\u88c5Ubuntu14.04\u8fc7\u7a0b\u8bb0\u5f55/", "text": "\u778e\u626f\u5728\u524d\n\n\u7b14\u8bb0\u672c\u521a\u4e70\u4e0d\u4e45\u5c31\u60f3\u88c5ubuntu\u6765\u7740\uff0c\u4f46\u7ed3\u679c\u53d1\u73b0BIOS\u542f\u52a8\u65b9\u5f0f\u4e3aUEFI\uff0c\u7f51\u4e0a\u4e00\u641c\u7d22\u53d1\u73b0\u8ddf\u4ee5\u524d\u7684\u53cc\u7cfb\u7edf\u5b89\u88c5\u65b9\u6cd5\u4e0d\u4e00\u6837\uff0c\u770b\u5177\u4f53\u6559\u7a0b\u611f\u89c9\u76f8\u5f53\u590d\u6742\uff0c\u800c\u4e14\u4e5f\u6709\u70b9\u62c5\u5fc3\u6298\u817e\u8dea\u4e86\u8fd9\u65b0\u672c\u672c\u6240\u4ee5\u4e00\u76f4\u6ca1\u6709\u52a8\u624b\u3002\u4f46\u6628\u5929\u53c8\u5fc3\u8840\u6765\u6f6e\uff0c\u770b\u4e86\u51e0\u4e2a\u6559\u7a0b\u540e\u4e8e\u662f\u51b3\u5b9a\u5f00\u641e\uff01\u867d\u7136\u4e2d\u95f4\u4e0d\u662f\u5f88\u987a\u5229\uff0c\u4f46\u6700\u540e\u7ed3\u679c\u53d1\u73b0\u4e5f\u6ca1\u6709\u591a\u590d\u6742\u3002\n\u73af\u5883\uff1a\u6211\u7684\u7b14\u8bb0\u672c\u578b\u53f7\u662f\u6234\u5c14Insprion 14R-5437,\u7cfb\u7edf\u4e3a\u539f\u88c5Win8.1\uff0cBIOS\u542f\u52a8\u65b9\u5f0f\u4e3aUEFI\u3002\u7528\u4e8b\u5148\u5236\u4f5c\u7684\u542f\u52a8U\u76d8\uff0c\u5b89\u88c5\u7684\u662fUbuntu14.04 64\u4f4d\u3002\n\n\u672c\u6587\u4e0d\u662f\u5b8c\u6574\u6559\u7a0b\uff0c\u6240\u4ee5\u5efa\u8bae\u53c2\u9605\u7ed3\u5408\u7f51\u4e0a\u522b\u7684\u6559\u7a0b\u6765\u64cd\u4f5c\u3002\n\u8fc7\u7a0b\n\n\n\u5728\u5b89\u88c5\u6b65\u9aa4\u5f00\u59cb\u524d\uff0c\u5f53\u7136\u5f97\u5148\u5206\u51fa\u4e00\u90e8\u5206\u7a7a\u95f2\u7a7a\u95f4\u3002\u5efa\u8bae\u662f\u4ece\u786c\u76d8\u4e0a\u6700\u540e\u4e00\u4e2a\u5206\u533a\u5206\u5272\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u4e0d\u7528\u5206\u533a\u683c\u5f0f\u5316\uff0c\u7559\u7740\u5b83\u7a7a\u767d\u5c31\u884c\u3002\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u5206\u533a\u52a9\u624b\u89e3\u51b3\u3002\n\n\u9996\u5148\u5f53\u7136\u5f97\u5230BIOS\u8bbe\u7f6e\u4e0b\u5173\u95ed\u7f6a\u6076\u4e4b\u6e90\u2014\u2014secure boot\u3002\u4f46\u662f\u6bcf\u4e2a\u673a\u578b\u7684BIOS\u8bbe\u7f6e\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u81ea\u5df1\u53d1\u6325\u5427\u3002\n\n\u91cd\u542f\u7535\u8111\u6309F12\u8fdb\u5165\u542f\u52a8\u8bbe\u5907\u9009\u62e9\u3002\u6211\u9009\u7684\u662fUEFI\u65b9\u5f0f\u542f\u52a8\u7684U\u76d8\u3002\n\n\u8fdb\u5165\u5b89\u88c5\u7a0b\u5e8f\u540e\uff0c\u4e00\u8def\u76f4\u8d70\u5230\u8fbe\u5b89\u88c5\u65b9\u5f0f\u7684\u9009\u62e9\u753b\u9762\uff08\u7c7b\u4f3c\u4e0b\u56fe\uff0c\u4ec5\u4f9b\u53c2\u8003\uff09\u3002\u6211\u5230\u8fbe\u8fd9\u753b\u9762\u65f6\uff0c\u5b83\u5e76\u6ca1\u6709\u68c0\u6d4b\u51fa\u6211\u786c\u76d8\u4e0a\u7684win8.1\u6765\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e86\u6700\u540e\u4e00\u9879\uff0c\u201c\u5176\u4ed6\u9009\u9879\u201d\u3002\n\n\n\u5206\u914d\u7a7a\u95f4\u3002\u4e3b\u8981\u6709\u4e24\u90e8\u5206\uff1aa\uff09\u70b9+\uff0c\u7136\u540e\u9009\u5927\u5c0f\uff08\u8bb0\u5f97\u7559swap\u7684\u7a7a\u95f4\uff09\uff0c\u9009\u4e3b\u5206\u533a\uff0cext4\u683c\u5f0f\uff0c\u4ece\u8d77\u59cb\u70b9\u5f00\u59cb\uff0c\u9009\u6302\u8f7d\u5230 / \uff0c\u8fd9\u7a7a\u95f4\u5c31\u4ee3\u8868\u4ee5\u540eubuntu\u7cfb\u7edf\u80fd\u4f7f\u7528\u7684\u7a7a\u95f4\u5927\u5c0f\u3002b\uff09\u5269\u4e0b\u7684\u7a7a\u95f4\uff084G-8G\uff0c\u4e00\u822c\u4e0d\u5c0f\u4e8e\u4f60\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u6b65\u9aa4\u7c7b&#20284;\u4e0a\u9762\uff09\uff0c\u65b0\u5efa\u4e00\u4e2aswap\u5206\u533a\uff1a\u9009\u5927\u5c0f\uff0c\u9009\u903b\u8f91\u5206\u533a\uff0c\u4ece\u8d77\u59cb\u70b9\u5f00\u59cb\uff0c\u6302\u8f7d\u5230swap\u3002\u8fd9\u91cc / \u4e0b\u5305\u542b\u4e86/boot\uff0c/home\uff0c/opt\u7b49\u7b49\uff0c\u4e5f\u6709\u4eba\u4e3a\u8fd9\u51e0\u4e2a\u5355\u72ec\u5efa\u7acb\u5206\u533a\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4e0d\u8fc7\u6211\u5efa\u8bae\u7b49\u4f60\u61c2\u4e86\u4e4b\u540e\u4e0b\u6b21\u518d\u8bd5\u5427\u3002\u5728\u6b64\u9875\u9762\u4e0a\u4f60\u5e94\u8be5\u80fd\u627e\u5230\u4e00\u4e2aefi\u5206\u533a\uff0c\u5b83\u5c31\u662fUEFI\u7684\u542f\u52a8\u6587\u4ef6\u5b58\u653e\u7684\u5730\u65b9\u3002\n\n\u5b8c\u6210\u4ee5\u4e0a\u6b65\u9aa4\u5c31\u53ef\u4ee5\u5f00\u59cb\u5b89\u88c5\u4e86\uff0cnothing more\u3002\n\n\u5b8c\u6210ubuntu\u7684\u5b89\u88c5\u540e\uff0c\u91cd\u542f\u7535\u8111\uff0c\u80fd\u770b\u5230\u53cc\u7cfb\u7edf\u9009\u62e9\u753b\u9762\uff0c\u5c31\u4ee3\u8868\u53cc\u7cfb\u7edf\u5b89\u88c5\u6210\u529f\u4e86\u3002\n\n\u7ed3\u675f\u8bed\n\n\u4e00\u5f00\u59cb\u6211\u662f\u7528ubuntu12.04.2 64\u4f4d\u6765\u5c1d\u8bd5\u7684\uff0c\u4f46\u5728\u7b2c\u56db\u6b65\u5206\u914d\u5b8c\u7a7a\u95f4\u8fdb\u5165\u4e0b\u4e00\u6b65\u4e4b\u540e\u603b\u662f\u63d0\u793a\u4ec0\u4e48\u65e0\u6cd5\u5b89\u88c5\u5230/target\u3002\u540e\u6765\u4e0b\u4e8614.04\u624d\u6210\u529f\u4e86\u3002\n\u4ee5\u4e0a\u662f\u6211\u4eb2\u6d4b\u7684\u5b89\u88c5\u8fc7\u7a0b\uff0c\u4e0d\u4ee3\u8868\u522b\u7684\u673a\u578b\u4e5f\u80fd\u6309\u6b64\u6210\u529f\uff0c\u4e0d\u8fc7\u7a0b\u5e8f\u733f\u90a3\u9897\u6562\u4e8e\u6298\u817e\u7684\u5fc3\u4e0d\u80fd\u4e22\u554a\nps:\u8bdd\u8bf4\u56de\u6765\uff0c\u4ee5\u524d\u90fd\u662f\u5728\u4f4e\u914d\u7f6e\u7684\u673a\u5668\u4e0a\u73a9ubuntu\uff0c\u8fd9\u6b21\u5728\u65b0\u672c\u5b50\u4e0a\u8fd0\u884c\u771f\u5fc3\u6d41\u7545\u8212\u670d!\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "ubuntu", "slug": "ubuntu", "permalink": "/tag/ubuntu/"}]}, {"title": "\u5faa\u73af\u6c42\u548c\u4e2d\u7684\u4ee3\u7801\u4f18\u5316", "date": "2014-05-09T22:42:02-00.00", "path": "/archives/\u5faa\u73af\u6c42\u548c\u4e2d\u7684\u4ee3\u7801\u4f18\u5316/", "text": "\u5728\u4eca\u5929\u65e9\u4e0a\u5d4c\u5165\u5f0f\u8bfe\u4e0a\u7684\u8bfe\u524d\u6f14\u793a\u4e2d\uff0c\u6211\u63d0\u5230\u4e86\u5faa\u73af\u6c42\u548c\u4e2d\u7684\u4f18\u5316\uff08\u5176\u5b9e\u90a3\u53ea\u662f\u524d\u4e00\u5929\u6211\u7f51\u4e0a\u641c\u7d22\u505a\u51c6\u5907\u65f6\u65e0\u610f\u78b0\u5230\u7684\uff09\u3002\u6f14\u793a\u4e2d\u6211\u4e3e\u7684\u4f8b\u7a0b\u5982\u4e0b\uff1a\nint sum = 0;\nfor (int i = 0; i &amp;lt; 100; i++)\n{\n    sum += array[i];\n}\n\nint sum1 = 0, sum2 = 0;\nfor (int i = 0; i &amp;lt; 100; i += 2)\n{\n    sum1 += array[i];\n    sum2 += array[i + 1];\n}\n\nint sum = sum1 + sum2;\n\n\u5f53\u65f6\u5728\u7f51\u4e0a\u770b\u5230\u7684\u7ed3\u8bba\u662f\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u66f4\u4f18\uff0c\u539f\u56e0\u6709\u4e8c\uff1a\n\n\u5faa\u73af\u4f53\u4e2d\u4e24\u4e2a\u4e0d\u76f8\u5173\u7684\u8fd0\u7b97\u53ef\u4ee5\u5f97\u5230\u5e76\u884c\u5904\u7406\uff0c\u51cf\u5c11\u8fd0\u884c\u65f6\u95f4\n\u5faa\u73af\u6b21\u6570\uff08\u4ece\u6c47\u7f16\u7684\u5c42\u6b21\u4e0a\u8bb2\u5c31\u662f\u6761\u4ef6\u8df3\u8f6c\uff09\uff0c\u5176\u6b21\u6570\u51cf\u5c11\uff0c\u56e0\u4e3a\u6761\u4ef6\u8df3\u8f6c\u53ea\u6709\u5230\u6700\u540e\u4e00\u523b\u624d\u77e5\u9053\u4ee3\u7801\u4f1a\u8df3\u5f80\u4f55\u5904\u3002\n\n\u6f14\u793a\u5b8c\u540e\uff0c\u88ab\u8001\u5e08\u95ee\u5230\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u80fd\u5f97\u5230\u591a\u5927\u7684\u4f18\u5316\uff0c\u4f60\u6d4b\u8bd5\u8fc7\u8fd9\u4ee3\u7801\u5417\uff1f\n\u60bb\u60bb\u5730\u56de\u7b54\uff0c\u6ca1\u6709\u3002\n\u4e8e\u662f\u56de\u6765\u4e4b\u540e\u6211\u7528\u66f4\u5927\u7684\u5faa\u73af\u6b21\u6570\u53bb\u6d4b\u8bd5\u9a8c\u8bc1\u4e86\u4e00\u4e0b\uff0c\u4ee3\u7801\u4e00\u5982\u4e0b\uff1a\n#include &lt;windows.h&gt;\n#include &lt;cstdio&gt;\nint main()\n{\n    DWORD start_time,end_time;\n    int sum,i;\n\n    start_time=GetTickCount();\n    sum=0;\n    for(i=0;i&lt;1000000000;i++)\n        sum+=i;\n    end_time=GetTickCount();\n    printf(&quot;%d\\n&quot;,end_time-start_time);\n\n    sum=0;\n    int sum2=0,sum3=0;\n    start_time=GetTickCount();\n    for(int i=0;i&lt;1000000000;i+=2)\n        sum2+=i,sum3+=i+1;\n    sum=sum2+sum3;\n    end_time=GetTickCount();\n    printf(&quot;%d\\n&quot;,end_time-start_time);\n}\n\n\u8fd0\u884c\u7ed3\u679c\uff1a\n\n5594\n3328\n\u7531\u6b64\u53ef\u89c1\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u786e\u5b9e\u80fd\u5f97\u5230\u53ef\u89c2\u7684\u6027\u80fd\u4f18\u5316\u3002\u90a3\u4e48\uff0c\u73b0\u5728\u5269\u4e0b\u7684\u95ee\u9898\u662f\uff0c\u5230\u5e95\u662f\u7b2c\u4e00\u4e2a\u539f\u56e0\u8d77\u7684\u4f5c\u7528\u5927\uff0c\u8fd8\u662f\u7b2c\u4e8c\u4e2a\u539f\u56e0\uff1f\n\u6211\u628a\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7684\u4ee3\u7801\u4fee\u6539\u4e86\uff0c\u4ee3\u7801\u4e8c\u5982\u4e0b\uff1a\nsum=0;\n    start_time=GetTickCount();\n    for(int i=0;i&lt;1000000000;i+=2)\n        sum+=i+i+1;\n    end_time=GetTickCount();\n    printf(&quot;%d\\n&quot;,end_time-start_time);\n\n\u8fd0\u884c\u7ed3\u679c\uff1a\n\n5422\n2953\n\u7ecf\u5e38\u591a\u6b21\u6d4b\u8bd5\u8868\u660e\uff0c\u4ee3\u7801\u4e8c\u786e\u5b9e\u6bd4\u4ee3\u7801\u4e00\u91cc\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u660e\u663e\u5feb\u4e0a\u4e00\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4e2a\u4eba\u611f\u89c9\u5176\u4e2d\u6ca1\u6709\u7528\u5230\u5e76\u884c\u5904\u7406\u4f18\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7279\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u51cf\u5c11\u6761\u4ef6\u8df3\u8f6c\u6b21\u6570\uff0c\u53ef\u4ee5\u83b7\u5f97\u53ef\u89c2\u7684\u6027\u80fd\u4f18\u5316\u3002\n\u4e0b\u9762\u6211\u5c1d\u8bd5\u8fdb\u884c-O\u7f16\u8bd1\u4f18\u5316\u3002\u7ed3\u679c\u5982\u4e0b\uff1a\n\n-O1\u4f18\u5316\u5c45\u7136\u80fd\u51cf\u5c11\u8fd9\u4e48\u591a\u65f6\u95f4\uff01\u4e0d\u8fc7\u53ef\u80fd\u662f\u8fd9\u6bb5\u4ee3\u7801\u903b\u8f91\u592a\u7b80\u5355\u4e86\u3002\u53e6\u5916\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48-O2\u4f18\u5316\u540e\u7684\u8fd0\u884c\u7ed3\u679c\u4e0d\u6b63\u5e38\u3002\u3002\u3002\u6709\u77e5\u9053\u539f\u56e0\u7684\u7ae5\u978b\u8bf7\u591a\u591a\u6307\u6559\uff01\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "C++", "slug": "C++", "permalink": "/tag/C++/"}]}, {"title": "\u8d34\u5427\u5927\u53ec\u5524\u672f\u2014\u2014Python\u5b9e\u73b0\u63d0\u53d6\u8d34\u5427\u9875\u9762\u7684\u7528\u6237id", "date": "2014-05-03T15:31:42-00.00", "path": "/archives/\u8d34\u5427\u5927\u53ec\u5524\u672f\u2014\u2014Python\u5b9e\u73b0\u63d0\u53d6\u8d34\u5427\u9875\u9762\u7684\u7528\u6237id/", "text": "\u524d\u51e0\u5929\u5c31\u60f3\u5199\u4e00\u4e2apython\u811a\u672c\u5b9e\u73b0\u4ece\u767e\u5ea6\u8d34\u5427\u4efb\u610f\u5e16\u5b50\u9875\u9762\u83b7\u53d6\u8be5\u9875\u9762\u4e0a\u7684\u7528\u6237id\u3002\n\u4e00\u5f00\u59cb\u6211\u6253\u7b97\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u67e5\u627e&lt;a data-field&gt;\u6807\u7b7e\uff0c\u4f46\u591a\u6b21\u5c1d\u8bd5\u540e\u88ab\u641e\u6655\u4e86\uff01\uff01html\u4ee3\u7801\u91cc\u9762\u7684\u8f6c\u4e49\u5b9e\u5728\u592a\u9ebb\u70e6\u4e86\uff01\uff08\u597d\u5427\uff0c\u5176\u5b9e\u53ea\u662f\u6211\u6ca1\u7ecf\u9a8c\uff09\uff09\n\u540e\u6765\u5c1d\u8bd5\u7528BeautifulSoup\u89e3\u6790html\uff0c\u987a\u5229\u5f97\u5230\u7528\u6237id\u4e86\uff0c\u4f46\u662f\u4ece\u5f97\u5230\u7684\u7ed3\u679c\u53d1\u73b0\uff0c\u6709\u4e9b\u7528\u6237id\u5c45\u7136\u6ca1\u6709\u5f97\u51fa\u6765\uff0c\u5206\u6790\u534a\u5929\u624d\u53d1\u73b0\u539f\u6765\u662f\u767e\u5ea6\u8d34\u5427\u628ahtml\u7684\u4e00\u534a\u7ed9\u4ee5&lt;!--&gt;\u6807\u7b7e\u6ce8\u91ca\u6389\u4e86\uff0c\u4f30\u8ba1\u662f\u4e3a\u4e86\u4f18\u5316\u9875\u9762\u7684\u52a0\u8f7d\u3002\u4f46\u6b63\u662f\u8fd9\u4e2a\u539f\u56e0\u4f7f\u5f97\u6211\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528BeautifulSoup\u89e3\u6790html\u83b7\u53d6\u76ee\u6807\u7ed3\u679c\u4e86\u3002\n\u4e8e\u662f\u6211\u53c8\u60f3\u627e\u627e\u6709\u6ca1\u6709\u522b\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u53ef\u4ee5\u5904\u7406html\u6ce8\u91ca\u90e8\u5206\uff0c\u5c1d\u8bd5\u4e86lxml.html\u6a21\u5757\uff0c\u540c\u6837\u65e0\u679c\u3002\n\u6700\u7ec8\u53ea\u6709\u56de\u5230\u6700\u521d\u7684\u65b9\u6cd5\u2014\u2014\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u641e\u5b9a\uff01\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n__author__ = &#39;tigerstudent&#39;\nimport urllib\nimport re\nimport json\n\n# \u56e0\u4e3a\u8be5\u7f51\u9875\u662f gbk\u7f16\u7801\u7684\uff0c\u6240\u4ee5\u9996\u5148\u4ecegbk\u7f16\u7801\u8f6c\u4e3apython\u5185\u90e8\u7684unicode\u7f16\u7801\npage=urllib.urlopen(r&#39;http://tieba.baidu.com/p/3014774907&#39;).read().decode(&#39;gbk&#39;)\n# \u8fd9\u91cc\u6d89\u53ca\u5230\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8d2a\u5a6a\u5339\u914d\uff0c\u6240\u4ee5\u7528(.+?)\u800c\u4e0d\u7528(.+)\nres=re.findall(r&quot;data-field=\\&#39;(.+?)\\&#39;&quot;,page)\nfor i in res:\n    i=i.replace(u&#39;&quot;&#39;,u&#39;&quot;&#39;)\n    #i=i.replace(u&#39;false&#39;,u&quot;False&quot;)\u8fd9\u884c\u4ee3\u7801\u6ca1\u5fc5\u8981\uff0c\u56e0\u4e3apython\u7684False\u5728json\u683c\u5f0f\u4e2d\u8868\u793a\u4e3afalse\n    final=json.loads(i)\n    if(final and final.get(&#39;un&#39;)):#\u82e5final\u4e0d\u4e3aNone\u4e14\u542b\u6709&#39;un&#39;\u5143\u7d20\u5219\u8f93\u51fa\n        print final.get(&#39;un&#39;)\nprint res[0]    # \u4ece\u8fd9\u91cc\u8f93\u51fa\u7684\u7ed3\u679c\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u4e0a\u9762\u5bf9i\u7684\u4fee\u6539\u5e76\u6ca1\u6709\u771f\u6b63\u4fee\u6539res\u7684\u5185\u5bb9\nprint type(res[0])\n\n\u867d\u7136\u6700\u7ec8\u6ca1\u6709\u7528BeautifulSoup\u548clxml.html\u6a21\u5757\u89e3\u51b3...\n", "categories": [{"name": "\u778e\u6298\u817e", "slug": "\u778e\u6298\u817e", "permalink": "/category/\u778e\u6298\u817e/"}], "tags": [{"name": "python", "slug": "python", "permalink": "/tag/python/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/about/", "text": "\u5b66\u4e60AlanDecode/Blog-With-GitHub-Boilerplate\u642d\u5efa\u5728Github\u7684\u4e2a\u4eba\u535a\u5ba2\u3002\nContact\nTelegram\uff1aChichele\n", "categories": [], "tags": []}]}